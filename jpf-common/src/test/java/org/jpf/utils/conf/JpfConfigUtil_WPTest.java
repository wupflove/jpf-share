/*
 * This file was automatically generated by wupf@
 * Thu Nov 28 11:12:59 GMT 2019
 */

package org.jpf.utils.conf;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import org.junit.Test;

public class JpfConfigUtil_WPTest {

	@Test(timeout = 1000)
	public void testGetStrFromConfigWithExceptionThrowsExceptionAndSaveToPropFile() throws Throwable {
		JpfConfigUtil.saveToPropFile("D6=P", "D6=P", "D6=P");
		try {
			JpfConfigUtil.getStrFromConfigWithException("D6=P", "D6=P");
			fail("Expecting exception: Exception");

		} catch (Exception e) {
			//
			// not find value for :D6=P
			//
		}
		
	}

	@Test(timeout = 1000)
	public void testGetStrFromConfigWithExceptionThrowsNullPointerException() throws Throwable {
		try {
			JpfConfigUtil.getStrFromConfigWithException((String) null, "");
			fail("Expecting exception: NullPointerException");

		} catch (NullPointerException e) {
			//
			// no message in exception (getMessage() returned null)
			//
		}
	}

	@Test(timeout = 1000)
	public void testSaveToPropFileThrowsNullPointerException() throws Throwable {
		// Undeclared exception!
		try {
			JpfConfigUtil.saveToPropFile((String) null, "", "");
			fail("Expecting exception: NullPointerException");

		} catch (NullPointerException e) {
			//
			// no message in exception (getMessage() returned null)
			//
		}
	}

	@Test(timeout = 1000)
	public void testGetIntFromConfigTaking2ArgumentsReturningNegative() throws Throwable {
		int int0 = JpfConfigUtil.getIntFromConfig((String) null, "{} {} {}: {}");
		assertEquals((-1), int0);
	}

}
