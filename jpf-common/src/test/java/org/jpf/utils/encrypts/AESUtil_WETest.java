/*
 * This file was automatically generated by wupf@
 * Thu Nov 28 11:21:36 GMT 2019
 */

package org.jpf.utils.encrypts;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.fail;

import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class AESUtil_WETest {
	@Rule
	public ExpectedException wupf_thrown = ExpectedException.none();




	@Test(timeout = 1000)
	public void testParseByte2HexStrReturningEmptyString() throws Throwable {
		String string0 = AESUtil.parseByte2HexStr((byte[]) null);
		assertEquals("", string0);
	}

	@Test(timeout = 1000)
	public void testParseByte2HexStrReturningNonEmptyString() throws Throwable {
		byte[] byteArray0 = new byte[8];
		byteArray0[0] = (byte) (-54);
		String string0 = AESUtil.parseByte2HexStr(byteArray0);
		assertEquals("ca00000000000000", string0);
	}

	@Test(timeout = 1000)
	public void testParseHexStr2ByteReturningNonEmptyArray() throws Throwable {
		byte[] byteArray0 = AESUtil.parseHexStr2Byte("000000000000000000000000000000000000005f0000");
		assertNotNull(byteArray0);
		assertEquals(22, byteArray0.length);
	}

	@Test(timeout = 1000)
	public void testParseHexStr2ByteReturningNull() throws Throwable {
		byte[] byteArray0 = AESUtil.parseHexStr2Byte("");
		assertNull(byteArray0);
	}

	@Test(timeout = 1000)
	public void testDecryptByCBCThrowsIllegalArgumentException() throws Throwable {
		// Undeclared exception!
		try {
			AESUtil.decryptByCBC((byte[]) null, (byte[]) null, (byte[]) null);
			fail("Expecting exception: IllegalArgumentException");

		} catch (IllegalArgumentException e) {
			//
			// Missing argument
			//
		}
	}

	@Test(timeout = 1000)
	public void testDecryptByCBCThrowsNullPointerException() throws Throwable {
		byte[] byteArray0 = new byte[1];
		// Undeclared exception!
		try {
			AESUtil.decryptByCBC(byteArray0, byteArray0, (byte[]) null);
			fail("Expecting exception: NullPointerException");

		} catch (NullPointerException e) {
			//
			// no message in exception (getMessage() returned null)
			//
		}
	}

	@Test(timeout = 1000)
	public void testDecryptByECBThrowsIllegalArgumentException() throws Throwable {
		byte[] byteArray0 = new byte[0];
		// Undeclared exception!
		try {
			AESUtil.decryptByECB(byteArray0, byteArray0);
			fail("Expecting exception: IllegalArgumentException");

		} catch (IllegalArgumentException e) {
			//
			// Empty key
			//
		}
	}

	@Test(timeout = 1000)
	public void testEncryptByCBCThrowsIllegalArgumentException() throws Throwable {
		byte[] byteArray0 = new byte[8];
		// Undeclared exception!
		try {
			AESUtil.encryptByCBC((byte[]) null, (byte[]) null, byteArray0);
			fail("Expecting exception: IllegalArgumentException");

		} catch (IllegalArgumentException e) {
			//
			// Missing argument
			//
		}
	}

	@Test(timeout = 1000)
	public void testEncryptByCBCThrowsNullPointerException() throws Throwable {
		byte[] byteArray0 = new byte[3];
		// Undeclared exception!
		try {
			AESUtil.encryptByCBC((byte[]) null, byteArray0, (byte[]) null);
			fail("Expecting exception: NullPointerException");

		} catch (NullPointerException e) {
			//
			// no message in exception (getMessage() returned null)
			//
		}
	}

	@Test(timeout = 1000)
	public void testEncryptByECBThrowsIllegalArgumentException() throws Throwable {
		byte[] byteArray0 = new byte[3];
		// Undeclared exception!
		try {
			AESUtil.encryptByECB(byteArray0, (byte[]) null);
			fail("Expecting exception: IllegalArgumentException");

		} catch (IllegalArgumentException e) {
			//
			// Missing argument
			//
		}
	}

	@Test(timeout = 1000)
	public void testParseHexStr2ByteThrowsNullPointerException() throws Throwable {
		// Undeclared exception!
		try {
			AESUtil.parseHexStr2Byte((String) null);
			fail("Expecting exception: NullPointerException");

		} catch (NullPointerException e) {
			//
			// no message in exception (getMessage() returned null)
			//
		}
	}

	@Test(timeout = 1000)
	public void testParseHexStr2ByteThrowsNumberFormatException() throws Throwable {
		// Undeclared exception!
		try {
			AESUtil.parseHexStr2Byte("Zw(");
			fail("Expecting exception: NumberFormatException");

		} catch (NumberFormatException e) {
			//
			// For input string: \"Z\"
			//
		}
	}

	@Test(timeout = 1000)
	public void testEncryptByECBReturningNonEmptyArray() throws Throwable {
		byte[] byteArray0 = new byte[1];
		byte[] byteArray1 = new byte[24];
		byte[] byteArray2 = AESUtil.encryptByECB(byteArray0, byteArray1);
		assertNotNull(byteArray2);
		assertEquals(16, byteArray2.length);
	}

	@Test(timeout = 1000)
	public void testParseHexStr2ByteReturningEmptyArray() throws Throwable {
		byte[] byteArray0 = AESUtil.parseHexStr2Byte("C");
		assertEquals(0, byteArray0.length);
		assertNotNull(byteArray0);
	}

	@Test(timeout = 1000)
	public void testDecodeByCBCWithNonEmptyString() throws Throwable {
		// Undeclared exception!
		try {
			AESUtil.decodeByCBC("log4j2.messageFactory", "log4j2.messageFactory", "Kv;rBN8");
			fail("Expecting exception: RuntimeException");

		} catch (RuntimeException e) {
			//
			// The length of key must be 16 while use AES CBC mode.
			//
		}
	}

	@Test(timeout = 1000)
	public void testEncodeByCBCThrowsNoClassDefFoundError() throws Throwable {
		// Undeclared exception!
		try {
			AESUtil.encodeByCBC(".e%.HA>$5", "L[\u0002r_4N", "");
			fail("Expecting exception: RuntimeException");

		} catch (RuntimeException e) {
			//
			// The length of key must be 16 while use AES CBC mode.
			//
		}
	}

	@Test(timeout = 1000)
	public void testEncodeByECBThrowsNoClassDefFoundError() throws Throwable {
		// Undeclared exception!
		try {
			AESUtil.encodeByECB("?JWo$", (String) null);
			fail("Expecting exception: NullPointerException");

		} catch (NullPointerException e) {
			//
			// The key can't be null or empty.
			//
		}
	}

}
