/*
 * This file was automatically generated by wupf@
 * Thu Nov 28 11:48:16 GMT 2019
 */

package org.jpf.utils.ios;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.fail;

import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;

import org.junit.Test;

public class UnicodeReader_WETest {

	@Test(timeout = 1000)
	public void testGetDefaultEncodingReturningEmptyString() throws Throwable {
		byte[] byteArray0 = new byte[0];
		ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
		BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
		UnicodeReader unicodeReader0 = new UnicodeReader(bufferedInputStream0, "");
		String string0 = unicodeReader0.getDefaultEncoding();
		assertEquals("", string0);
	}

	@Test(timeout = 1000)
	public void testClose() throws Throwable {
		byte[] byteArray0 = new byte[1];
		ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
		UnicodeReader unicodeReader0 = new UnicodeReader(byteArrayInputStream0, (String) null);
		unicodeReader0.close();
		String string0 = unicodeReader0.getEncoding();
		assertNull(string0);
	}

	@Test(timeout = 1000)
	public void testGetEncoding() throws Throwable {
		byte[] byteArray0 = new byte[0];
		ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
		BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
		UnicodeReader unicodeReader0 = new UnicodeReader(bufferedInputStream0, "");
		String string0 = unicodeReader0.getEncoding();
		assertNull(string0);
	}

	@Test(timeout = 1000)
	public void testRead() throws Throwable {
		byte[] byteArray0 = new byte[1];
		ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
		UnicodeReader unicodeReader0 = new UnicodeReader(byteArrayInputStream0, (String) null);
		unicodeReader0.init();
		char[] charArray0 = new char[3];
		int int0 = unicodeReader0.read(charArray0, 0, 0);
		assertEquals(0, int0);
	}

	@Test(timeout = 1000)
	public void testCloseThrowsUnsupportedEncodingException0() throws Throwable {
		byte[] byteArray0 = new byte[2];
		byteArray0[0] = (byte) 85;
		ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
		UnicodeReader unicodeReader0 = new UnicodeReader(byteArrayInputStream0,
				"com.google.common.cache.ForwardingLoadingCache");
		try {
			unicodeReader0.close();
			fail("Expecting exception: UnsupportedEncodingException");

		} catch (UnsupportedEncodingException e) {
		}
	}

	@Test(timeout = 1000)
	public void testInit0() throws Throwable {
		byte[] byteArray0 = new byte[5];
		byteArray0[1] = (byte) (-109);
		ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
		UnicodeReader unicodeReader0 = new UnicodeReader(byteArrayInputStream0, (String) null);
		unicodeReader0.init();
		assertEquals(1, byteArrayInputStream0.available());
	}

	@Test(timeout = 1000)
	public void testInit1() throws Throwable {
		byte[] byteArray0 = new byte[1];
		byteArray0[0] = (byte) (-1);
		ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
		UnicodeReader unicodeReader0 = new UnicodeReader(byteArrayInputStream0, (String) null);
		unicodeReader0.init();
		assertNull(unicodeReader0.getDefaultEncoding());
	}

	@Test(timeout = 1000)
	public void testInit2() throws Throwable {
		byte[] byteArray0 = new byte[1];
		ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
		UnicodeReader unicodeReader0 = new UnicodeReader(byteArrayInputStream0, (String) null);
		unicodeReader0.init();
		unicodeReader0.init();
		assertNull(unicodeReader0.getDefaultEncoding());
	}

	@Test(timeout = 1000)
	public void testReadThrowsIndexOutOfBoundsException_1() throws Throwable {
		byte[] byteArray0 = new byte[5];
		ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
		UnicodeReader unicodeReader0 = new UnicodeReader(byteArrayInputStream0, (String) null);
		char[] charArray0 = new char[1];
		// Undeclared exception!
		try {
			unicodeReader0.read(charArray0, (-1045), 0);
			fail("Expecting exception: IndexOutOfBoundsException");

		} catch (IndexOutOfBoundsException e) {
		}
	}
	
	/**
	* Run the UnicodeReader method test.
	*
	* @throws Exception
	* 
	* @generatedBy wupf 
	* @2019-11-28 19:47:05
	* @see    UnicodeReader(InputStream in,String defaultEnc)   
	*/
	@Test(timeout = 1000)
	public void testUnicodeReader_0() throws Exception {

		InputStream cc_in = null;
		String cc_defaultEnc = "abc123";
		UnicodeReader wupf_result = new UnicodeReader(cc_in, cc_defaultEnc);

		assertNotNull(wupf_result);

	}
}
